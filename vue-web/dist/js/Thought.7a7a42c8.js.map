{"version":3,"sources":["webpack:///./src/views/Thought/Thought.vue?4461","webpack:///./src/views/Thought/Thought.vue","webpack:///./src/views/Thought/Thought.vue?b56d"],"names":["id","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$data","writeText","$event","cols","rows","style","placeholder","_hoisted_4","onClick","_cache","args","$options","writeThou","_createVNode","_component_el_icon","_component_EditPen","_hoisted_5","List","length","_hoisted_6","_component_IceCreamRound","_Fragment","_renderList","dateList","item","key","_hoisted_7","showName","_hoisted_9","thoughtList","li","_hoisted_10","_hoisted_11","_hoisted_12","_toDisplayString","_ctx","Tool","getTimeString","date","destoryThou","_id","_hoisted_13","_hoisted_14","text","name","data","careerTextLength","EmotionList","thoughtEmotion","showEmotionList","methods","updateCareerTextLength","TextLength","this","forEach","emotion","owner","$store","state","user","trim","alert","that","axios","post","config","address","then","updateDate","ElMessage","showClose","message","type","confirm","changeEmotion","setThoughtList","FormatDate","time","dateString","getDateString","timeSort","year","month","day","initDateList","push","hasDate","i","sort","a","b","nowYear","itemYear","nowMonth","itemMonth","nowDay","itemDay","Date","getTime","get","res","mounted","document","title","__exports__","render"],"mappings":"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","file":"js/Thought.7a7a42c8.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--11-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--11-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--11-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--11-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Thought.vue?vue&type=style&index=0&id=46d852a8&lang=less&scoped=true\"","<template>\r\n    <!-- 页面主体 -->\r\n    <div id=\"ThoughtPage\">\r\n        <div class=\"Header\">\r\n            <!-- 输入块 -->\r\n            <div class=\"EnterBlock\">\r\n                <!-- 短文输入框 -->\r\n                <textarea v-model=\"writeText\" cols=\"30\" rows=\"6\" style=\"resize:none\" placeholder=\"一个事物也许不止一种看法呢......\" ></textarea>\r\n                <div class=\"EnterTools\">\r\n                    <button class=\"EnterButton\" @click=\"writeThou\"><el-icon><EditPen /></el-icon>记录</button>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <!-- 历史列表块 -->\r\n        <ul class=\"ThougthList\">\r\n            <div class=\"NullBlockTip\" v-if=\"List.length <= 0\">\r\n                <el-icon><IceCreamRound /></el-icon>\r\n                给生活来一点记录!\r\n            </div>\r\n            <div class=\"DateLi\" v-for=\"(item,key) in dateList\" :key=\"key\">\r\n                <p class=\"DateLiTitle\">{{item.showName}} <span class=\"DateThoughtNumber\" v-if=\"false\">{{item.thoughtList.length}} 感悟</span></p>\r\n                <ul class=\"CurrentDateList\">\r\n                    <li v-for=\"(li,key) in item.thoughtList\" :key=\"key\" class=\"ThougthLi\">\r\n                        <div class=\"ThoughtMain\">\r\n                            <div class=\"ThoughtDetails\">\r\n                                <span class=\"thou_time\">{{Tool.getTimeString(li.date)}}</span>\r\n                                <span @click=\"destoryThou(li._id)\" class=\"DestoryThought\">删除</span>\r\n                            </div>\r\n                            <pre class=\"ThoughtText\">{{li.text}}</pre>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </ul>\r\n    </div>\r\n</template>\r\n<script>\r\nimport { ElMessage } from 'element-plus'\r\nexport default {\r\n    name:'Thought',\r\n      data(){\r\n      return {\r\n        List:[],\r\n        writeText:\"\",\r\n        careerTextLength:0,\r\n        dateList:[],\r\n        EmotionList:[],\r\n        thoughtEmotion:{\r\n            name:\"状态\",\r\n            _id:null\r\n        },\r\n        showEmotionList:false,\r\n        date:{}\r\n      };\r\n    },\r\n    methods:{\r\n        // 更新短语生涯字数\r\n        updateCareerTextLength(){\r\n            // this.careerTextLength = 0;\r\n            let TextLength = 0;\r\n            this.List.forEach(item=>{\r\n                TextLength += item.text.length;\r\n            })\r\n            this.careerTextLength = TextLength;\r\n        },\r\n        //用户新加短语\r\n        writeThou(){\r\n            let data = {\r\n                text:this.writeText,\r\n                emotion:this.thoughtEmotion._id,\r\n                owner:this.$store.state.user.id\r\n            }\r\n            if(this.writeText.trim() == \"\"){\r\n                alert(\"记录内容不能为空\");\r\n                return;\r\n            }\r\n            // if(this.thoughtEmotion._id == null){\r\n            //     alert(\"请选择一个状态\");\r\n            //     return;\r\n            // }\r\n            let that = this;\r\n            this.axios.post(this.Tool.config.address + '/thought/add',data)\r\n                .then(()=>{\r\n                    that.updateDate();\r\n                    ElMessage({\r\n                        showClose: true,\r\n                        message: '记录成功!',\r\n                        type: 'success',\r\n                    })\r\n                    this.writeText = \"\";\r\n                });\r\n        },\r\n        //用户删除短语\r\n        destoryThou(_id){\r\n            if(!confirm('确定删除该短语吗?')){\r\n                return;\r\n            }\r\n            let data = {\r\n                _id\r\n            }\r\n            let that = this;\r\n            this.axios.post(this.Tool.config.address + '/thought/remove',data)\r\n            .then(()=>{\r\n                ElMessage({\r\n                    showClose: true,\r\n                    message: '已删除该短语',\r\n                })\r\n                that.updateDate();\r\n            });\r\n        },\r\n        // 更改新短语的状态\r\n        changeEmotion(item){\r\n            this.thoughtEmotion = item;\r\n        },\r\n        // 更新所有短语的日期\r\n        setThoughtList(){\r\n            this.List.forEach((item)=>{\r\n                item.date = this.Tool.FormatDate(item.time);\r\n                item.dateString = this.Tool.getDateString(item.date);\r\n                item.timeSort = item.date.year * 12 * 31 + item.date.month * 31 + item.date.day;\r\n            });\r\n        },\r\n        initDateList(){\r\n            this.dateList = [];\r\n            this.List.forEach((item)=>{\r\n                // 如果时间数组是空的\r\n                if(this.dateList.length == 0){\r\n                    this.dateList.push({\r\n                        dateString:item.dateString,\r\n                        timeSort:item.timeSort,\r\n                        date:item.date,\r\n                        thoughtList:[item]\r\n                    })\r\n\r\n                }else{\r\n                    let hasDate = false;\r\n                    for(let i = 0; i < this.dateList.length ; i++){\r\n                        if(this.dateList[i].dateString == item.dateString){\r\n                            hasDate = true;\r\n                            this.dateList[i].thoughtList.push(item);\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(!hasDate){\r\n                        this.dateList.push({\r\n                            dateString:item.dateString,\r\n                            timeSort:item.timeSort,\r\n                            date:item.date,\r\n                            thoughtList:[item]\r\n                        })\r\n                    }\r\n                }\r\n            });\r\n            this.dateList.sort((a,b)=>{\r\n                return b.timeSort - a.timeSort ;\r\n            })\r\n            let that = this;\r\n            this.dateList.forEach((item)=>{\r\n                let nowYear = that.date.year;\r\n                let itemYear = item.date.year;\r\n                let nowMonth = that.date.month;\r\n                let itemMonth = item.date.month;\r\n                let nowDay = that.date.day;\r\n                let itemDay = item.date.day;\r\n                item.showName = item.dateString;\r\n                if(nowYear == itemYear){\r\n                    item.showName = itemMonth + '-' + itemDay;\r\n                }\r\n                if(nowYear == itemYear && nowMonth == itemMonth && nowDay == itemDay){\r\n                    item.showName = '今天';\r\n                }\r\n                if(nowYear == itemYear && nowMonth == itemMonth && nowDay == itemDay + 1){\r\n                    item.showName = '昨天';\r\n                }\r\n                if(nowYear == itemYear && nowMonth == itemMonth && nowDay == itemDay + 2){\r\n                    item.showName = '前天';\r\n                }\r\n            })\r\n        },\r\n        updateDate(){\r\n          this.date = this.Tool.FormatDate(new Date().getTime());\r\n          this.axios.get(this.Tool.config.address + '/thought/all/'+this.$store.state.user.id)\r\n            .then(res=>{\r\n                this.List = res.data;\r\n                this.setThoughtList();\r\n                this.initDateList();\r\n                this.updateCareerTextLength();\r\n            });\r\n          this.axios.get(this.Tool.config.address + '/emotion/all')\r\n            .then(res=>{\r\n                this.EmotionList = res.data;\r\n            });\r\n        }\r\n    },\r\n    mounted(){\r\n        this.updateDate();\r\n        document.title = \"DataLife-想法短语\";\r\n    }\r\n}\r\n</script>\r\n<style lang=\"less\" scoped>\r\n    @import './Thought.less';\r\n</style>\r\n","import { render } from \"./Thought.vue?vue&type=template&id=46d852a8&scoped=true\"\nimport script from \"./Thought.vue?vue&type=script&lang=js\"\nexport * from \"./Thought.vue?vue&type=script&lang=js\"\n\nimport \"./Thought.vue?vue&type=style&index=0&id=46d852a8&lang=less&scoped=true\"\n\nimport exportComponent from \"D:\\\\Program\\\\DataLife\\\\vue-web\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-46d852a8\"]])\n\nexport default __exports__"],"sourceRoot":""}